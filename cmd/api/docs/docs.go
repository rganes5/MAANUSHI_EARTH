// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/admin/category/add": {
            "post": {
                "description": "ADDING CATEGORY FROM ADMINS END",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PRODUCT CATEGORY"
                ],
                "summary": "API FOR ADDING CATEGORY",
                "operationId": "ADMIN-ADD-CATEGORY",
                "parameters": [
                    {
                        "description": "Enter the category name",
                        "name": "category_details",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/utils.AddCategory"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    }
                }
            }
        },
        "/admin/category/delete/{category_id}": {
            "post": {
                "description": "DELETING CATEGORY AND ALSO CHECKING WHETHER IT HAS A EXISTING PRODUCT",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PRODUCT CATEGORY"
                ],
                "summary": "API FOR DELETING A CATEGORY",
                "operationId": "ADMIN-DELETE-CATEGORY",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Enter the category id that you would like to delete",
                        "name": "category_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    }
                }
            }
        },
        "/admin/category/listall": {
            "get": {
                "description": "LISTING ALL CATEGORIES FROM ADMINS AND USERS END",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PRODUCT CATEGORY"
                ],
                "summary": "API FOR LISTING ALL CATEGORIES",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Enter the page number to display",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items to retrieve per page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    }
                }
            }
        },
        "/admin/category/update/{category_id}": {
            "patch": {
                "description": "UPDATING CATEGORY NAME FROM ADMINS END",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PRODUCT CATEGORY"
                ],
                "summary": "API FOR EDITING CATEGORY",
                "operationId": "ADMIN-EDIT-CATEGORY",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Enter the category id that you would like to make the change",
                        "name": "category_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Enter the category details",
                        "name": "category_details",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/utils.UpdateCategory"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    }
                }
            }
        },
        "/admin/home": {
            "get": {
                "description": "DISPLAY ADMIN PROFILE",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ADMIN"
                ],
                "summary": "API FOR ADMIN PROFILE",
                "operationId": "ADMIN-PROFILE",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    }
                }
            }
        },
        "/admin/login": {
            "post": {
                "description": "VERIFY THE EMAIL,PASSWORD, HASH THE PASSWORD AND GENERATE A JWT TOKEN AND SET IT TO A COOKIE",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ADMIN"
                ],
                "summary": "API FOR ADMIN LOGIN",
                "operationId": "ADMIN-LOGIN",
                "parameters": [
                    {
                        "description": "Enter the email and password",
                        "name": "login_details",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/utils.LoginBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    }
                }
            }
        },
        "/admin/logout": {
            "post": {
                "description": "ADMIN LOGOUT",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ADMIN"
                ],
                "summary": "API FOR ADMIN LOGOUT",
                "operationId": "ADMIN-LOGOUT",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    }
                }
            }
        },
        "/admin/products/add": {
            "post": {
                "description": "ADDING PRODUCT FROM ADMINS END",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PRODUCT"
                ],
                "summary": "API FOR ADDING PRODUCT",
                "operationId": "ADMIN-ADD-PRODUCT",
                "parameters": [
                    {
                        "description": "Enter the product details",
                        "name": "product_details",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/utils.Products"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    }
                }
            }
        },
        "/admin/products/delete/{product_id}": {
            "post": {
                "description": "DELETING PRODUCT BASED ON PRODUCT ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PRODUCT"
                ],
                "summary": "API FOR DELETING A PRODUCT",
                "operationId": "ADMIN-DELETE-PRODUCT",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Enter the product id that you would like to delete",
                        "name": "product_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    }
                }
            }
        },
        "/admin/products/listall": {
            "get": {
                "description": "LISTING ALL PRODUCTS FROM ADMINS AND USERS END",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PRODUCT"
                ],
                "summary": "API FOR LISTING ALL PRODUCTS",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Enter the page number to display",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items to retrieve per page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    }
                }
            }
        },
        "/admin/products/listbasedoncategory/{category_id}": {
            "get": {
                "description": "LISTING ALL PRODUCTS FROM ADMINS AND USERS END BASED ON CATEGORY",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PRODUCT"
                ],
                "summary": "API FOR LISTING ALL PRODUCTS BASED ON CATEGORY",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Enter the category id",
                        "name": "category_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Enter the page number to display",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items to retrieve per page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    }
                }
            }
        },
        "/admin/products/update/{product_id}": {
            "patch": {
                "description": "UPDATING PRODUCT DETAILS FROM ADMINS END",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PRODUCT"
                ],
                "summary": "API FOR EDITING PRODUCT",
                "operationId": "ADMIN-EDIT-PRODUCT",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Enter the product id that you would like to make the change",
                        "name": "product_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Enter the category details",
                        "name": "product_details",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/utils.Products"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    }
                }
            }
        },
        "/admin/productsDetails/add": {
            "post": {
                "description": "ADDING PRODUCT DETAILS FROM ADMINS END",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PRODUCT DETAILS"
                ],
                "summary": "API FOR ADDING PRODUCT DETAILS",
                "operationId": "ADMIN-ADD-PRODUCT-DETAILS",
                "parameters": [
                    {
                        "description": "Enter the product details",
                        "name": "product_details",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/utils.ProductDetails"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    }
                }
            }
        },
        "/admin/productsDetails/findproductanddetails/{product_id}": {
            "get": {
                "description": "LISTING ALL PRODUCT AND PRODUCT_DETAILS FROM ADMINS AND USERS END",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PRODUCT DETAILS"
                ],
                "summary": "API FOR LISTING PRODUCT AND PRODUCT_DETAILS DETAILS BY ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Enter the product id that you would like to see the details of",
                        "name": "product_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    }
                }
            }
        },
        "/admin/productsDetails/findproductdetails/{product_id}": {
            "get": {
                "description": "LISTING ALL PRODUCTS DETAILS FROM ADMINS AND USERS END",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PRODUCT DETAILS"
                ],
                "summary": "API FOR LISTING PRODUCTS DETAILS BY ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Enter the product id that you would like to see the details of",
                        "name": "product_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    }
                }
            }
        },
        "/admin/productsDetails/update/{product_id}": {
            "patch": {
                "description": "UPDATING PRODUCT DETAILS FROM ADMINS END",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PRODUCT DETAILS"
                ],
                "summary": "API FOR EDITING PRODUCT DETAILS",
                "operationId": "ADMIN-EDIT-PRODUCT-DETAILS",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Enter the product details id that you would like to make the change",
                        "name": "productDetails_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Enter the product details",
                        "name": "product_details",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/utils.ProductDetails"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    }
                }
            }
        },
        "/admin/signup": {
            "post": {
                "description": "CREATE A NEW ADMIN WITH REQUIRED DETAILS",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ADMIN"
                ],
                "summary": "API FOR NEW USER SIGN UP",
                "operationId": "SIGNUP-ADMIN",
                "parameters": [
                    {
                        "description": "New Admin Details",
                        "name": "admin_details",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/utils.AdminSignUp"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    }
                }
            }
        },
        "/admin/user": {
            "get": {
                "description": "LISTING ALL EXISTING USERS",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ADMIN"
                ],
                "summary": "API FOR LISTING USERS",
                "operationId": "ADMIN-LIST-USERS",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Enter the page number to display",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items to retrieve per page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    }
                }
            }
        },
        "/admin/user/{user_id}/make": {
            "patch": {
                "description": "GRANTING ACCESS FOR INDIVIDUAL USERS.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ADMIN"
                ],
                "summary": "API FOR BLOCKING/UNBLOCKING USERS",
                "operationId": "ADMIN-ACCESS",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Enter the specific user id",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Enter true/false",
                        "name": "access",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    }
                }
            }
        },
        "/user/cart/add/{product_id}": {
            "post": {
                "description": "ADDING ITEMS TO CART FROM USERS END",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CART"
                ],
                "summary": "API FOR ADDING PRODUCTS TO CART BY USER",
                "operationId": "USER-ADD-TO-CART",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Enter the product id",
                        "name": "product_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    }
                }
            }
        },
        "/user/cart/list": {
            "get": {
                "description": "LISTING CART AND ITEMS FROM USERS END",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CART"
                ],
                "summary": "API FOR DISPLAYING CART TO USER",
                "operationId": "USER-LIST-CART",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Enter the page number to display",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items to retrieve per page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    }
                }
            }
        },
        "/user/cart/remove/{product_id}": {
            "post": {
                "description": "REMOVING ITEMS FROM CART FROM USERS END",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CART"
                ],
                "summary": "API FOR REMOVING PRODUCTS TO CART BY USER",
                "operationId": "USER-REMOVE-FROM-CART",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Enter the product id",
                        "name": "product_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    }
                }
            }
        },
        "/user/category/listall": {
            "get": {
                "description": "LISTING ALL CATEGORIES FROM ADMINS AND USERS END",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PRODUCT CATEGORY"
                ],
                "summary": "API FOR LISTING ALL CATEGORIES",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Enter the page number to display",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items to retrieve per page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    }
                }
            }
        },
        "/user/checkout/placeorder": {
            "post": {
                "description": "Users can place a new order with the cart items.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ORDER"
                ],
                "summary": "API FOR PLACING A NEW ORDER",
                "operationId": "USER-PROCEED-ORDER",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Enter the payment id",
                        "name": "payment_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Enter the address id",
                        "name": "address_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    }
                }
            }
        },
        "/user/forgot/password": {
            "post": {
                "description": "VERIFY THE EMAIL AND NUMBER AND FIND THE DATA. SEND THE OTP AND VERIFY WITH NEW PASSWORD AND OTP.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "USER"
                ],
                "summary": "API FOR USER FORGOT PASSWORD OPTION",
                "operationId": "USER-FORGOT-PASSWORD",
                "parameters": [
                    {
                        "description": "Enter the email and phoneNumber",
                        "name": "login_details",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/utils.OtpLogin"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    }
                }
            }
        },
        "/user/forgot/password/otp/verify": {
            "patch": {
                "description": "VERIFY THE OTP AND ENTER A NEW PASSWORD",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "USER"
                ],
                "summary": "API FOR USER FORGOT PASSWORD OTP VERIFICATION",
                "operationId": "USER-FORGOT-PASSWORD-OTP-VERIFY",
                "parameters": [
                    {
                        "description": "Enter the Otp and New Password",
                        "name": "verify_details",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/utils.OtpVerify"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    }
                }
            }
        },
        "/user/login": {
            "post": {
                "description": "VERIFY THE EMAIL,PASSWORD, HASH THE PASSWORD AND GENERATE A JWT TOKEN AND SET IT TO A COOKIE",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "USER"
                ],
                "summary": "API FOR USER LOGIN",
                "operationId": "USER-LOGIN",
                "parameters": [
                    {
                        "description": "Enter the email and password",
                        "name": "login_details",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/utils.LoginBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    }
                }
            }
        },
        "/user/logout": {
            "post": {
                "description": "LOGOUT USER AND ALSO CLEAR COOKIES",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "USER"
                ],
                "summary": "API FOR USER LOGOUT",
                "operationId": "USER-LOGOUT",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    }
                }
            }
        },
        "/user/products/findproductanddetails/{product_id}": {
            "get": {
                "description": "LISTING ALL PRODUCT AND PRODUCT_DETAILS FROM ADMINS AND USERS END",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PRODUCT DETAILS"
                ],
                "summary": "API FOR LISTING PRODUCT AND PRODUCT_DETAILS DETAILS BY ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Enter the product id that you would like to see the details of",
                        "name": "product_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    }
                }
            }
        },
        "/user/products/findproductdetails/{product_id}": {
            "get": {
                "description": "LISTING ALL PRODUCTS DETAILS FROM ADMINS AND USERS END",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PRODUCT DETAILS"
                ],
                "summary": "API FOR LISTING PRODUCTS DETAILS BY ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Enter the product id that you would like to see the details of",
                        "name": "product_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    }
                }
            }
        },
        "/user/products/listall": {
            "get": {
                "description": "LISTING ALL PRODUCTS FROM ADMINS AND USERS END",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PRODUCT"
                ],
                "summary": "API FOR LISTING ALL PRODUCTS",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Enter the page number to display",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items to retrieve per page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    }
                }
            }
        },
        "/user/products/listbasedoncategory/{category_id}": {
            "get": {
                "description": "LISTING ALL PRODUCTS FROM ADMINS AND USERS END BASED ON CATEGORY",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PRODUCT"
                ],
                "summary": "API FOR LISTING ALL PRODUCTS BASED ON CATEGORY",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Enter the category id",
                        "name": "category_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Enter the page number to display",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items to retrieve per page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    }
                }
            }
        },
        "/user/profile/add/address": {
            "post": {
                "description": "ADDING NEW ADDRESS TO USER PROFILE",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "USER"
                ],
                "summary": "API FOR ADDING ADDRESS",
                "operationId": "USER-ADD-ADDRESS",
                "parameters": [
                    {
                        "description": "Add the address details",
                        "name": "address_details",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/utils.Address"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    }
                }
            }
        },
        "/user/profile/delete/address/{address_id}": {
            "post": {
                "description": "DELETING EXISTING ADDRESS ON USER PROFILE",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "USER"
                ],
                "summary": "API FOR DELETING ADDRESS",
                "operationId": "USER-DELETE-ADDRESS",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Enter the address id that you need to delete",
                        "name": "address_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    }
                }
            }
        },
        "/user/profile/edit/address/{address_id}": {
            "patch": {
                "description": "EDITING EXISTING ADDRESS ON USER PROFILE",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "USER"
                ],
                "summary": "API FOR EDITING/UPDATING ADDRESS",
                "operationId": "USER-EDIT-ADDRESS",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Enter the address id that you need to update",
                        "name": "address_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "edit the address details",
                        "name": "address_details",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/utils.UpdateAddress"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    }
                }
            }
        },
        "/user/profile/edit/profile": {
            "patch": {
                "description": "EDIT/UPDATE USER PROFILE",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "USER"
                ],
                "summary": "API FOR EDIT PROFILE",
                "operationId": "USER-PROFILE EDIT",
                "parameters": [
                    {
                        "description": "Edit the details as per wish",
                        "name": "update_details",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/utils.UpdateProfile"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    }
                }
            }
        },
        "/user/profile/home": {
            "get": {
                "description": "DISPLAY USER PROFILE",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "USER"
                ],
                "summary": "API FOR USER PROFILE",
                "operationId": "USER-PROFILE",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    }
                }
            }
        },
        "/user/profile/list/address": {
            "get": {
                "description": "LISTING ALL ADDRESSES FOR THE PARTICULAR USER",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "USER"
                ],
                "summary": "API FOR LISTING ADDRESSES",
                "operationId": "USER-LIST-ADDRESS",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Enter the page number to display",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items to retrieve per page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    }
                }
            }
        },
        "/user/signup": {
            "post": {
                "description": "CREATE A NEW USER WITH REQUIRED DETAILS",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "USER"
                ],
                "summary": "API FOR NEW USER SIGN UP",
                "operationId": "SIGNUP-USER",
                "parameters": [
                    {
                        "description": "New user Details",
                        "name": "user_details",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/utils.UsersSignUp"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    }
                }
            }
        },
        "/user/signup/otp/verify": {
            "post": {
                "description": "VERIFY THE OTP AND UPDATE THE VERIFIED COLUMN",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "USER"
                ],
                "summary": "API FOR NEW USER SIGN UP OTP VERIFICATION",
                "operationId": "SIGNUP-USER-OTP-VERIFY",
                "parameters": [
                    {
                        "description": "otp",
                        "name": "otp_details",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/utils.OtpSignUpVerify"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "utils.AddCategory": {
            "type": "object",
            "properties": {
                "categoryname": {
                    "type": "string"
                }
            }
        },
        "utils.Address": {
            "type": "object",
            "required": [
                "city",
                "country",
                "house",
                "land_mark",
                "name",
                "pincode",
                "state"
            ],
            "properties": {
                "area": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "house": {
                    "type": "string"
                },
                "land_mark": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "pincode": {
                    "type": "integer"
                },
                "primary": {
                    "type": "boolean"
                },
                "state": {
                    "type": "string"
                },
                "userid": {
                    "type": "integer"
                }
            }
        },
        "utils.AdminSignUp": {
            "type": "object",
            "required": [
                "Phonenum",
                "email",
                "firstname",
                "lastname",
                "password"
            ],
            "properties": {
                "Phonenum": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "firstname": {
                    "type": "string"
                },
                "lastname": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "utils.LoginBody": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "utils.OtpLogin": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "phonenum": {
                    "type": "string"
                }
            }
        },
        "utils.OtpSignUpVerify": {
            "type": "object",
            "required": [
                "otp",
                "otpid"
            ],
            "properties": {
                "otp": {
                    "type": "string"
                },
                "otpid": {
                    "type": "string"
                }
            }
        },
        "utils.OtpVerify": {
            "type": "object",
            "required": [
                "otp",
                "otpid"
            ],
            "properties": {
                "newpassword": {
                    "type": "string"
                },
                "otp": {
                    "type": "string"
                },
                "otpid": {
                    "type": "string"
                }
            }
        },
        "utils.ProductDetails": {
            "type": "object",
            "properties": {
                "productdetails": {
                    "type": "string"
                },
                "productid": {
                    "type": "integer"
                },
                "qty_in_stock": {
                    "type": "integer"
                }
            }
        },
        "utils.Products": {
            "type": "object",
            "properties": {
                "categoryid": {
                    "type": "integer"
                },
                "details": {
                    "type": "string"
                },
                "discountprice": {
                    "type": "integer"
                },
                "image": {
                    "type": "string"
                },
                "price": {
                    "type": "integer"
                },
                "productname": {
                    "type": "string"
                }
            }
        },
        "utils.Response": {
            "type": "object",
            "properties": {
                "data": {},
                "errors": {},
                "message": {
                    "type": "string"
                },
                "status_code": {
                    "type": "integer"
                }
            }
        },
        "utils.UpdateAddress": {
            "type": "object",
            "required": [
                "city",
                "country",
                "house",
                "land_mark",
                "name",
                "pincode",
                "state"
            ],
            "properties": {
                "area": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "house": {
                    "type": "string"
                },
                "land_mark": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "pincode": {
                    "type": "integer"
                },
                "primary": {
                    "type": "boolean"
                },
                "state": {
                    "type": "string"
                },
                "userid": {
                    "type": "integer"
                }
            }
        },
        "utils.UpdateCategory": {
            "type": "object",
            "required": [
                "categoryname"
            ],
            "properties": {
                "categoryname": {
                    "type": "string"
                }
            }
        },
        "utils.UpdateProfile": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "firstname": {
                    "type": "string"
                },
                "lastname": {
                    "type": "string"
                }
            }
        },
        "utils.UsersSignUp": {
            "type": "object",
            "required": [
                "email",
                "firstname",
                "lastname",
                "password",
                "phonenum"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "firstname": {
                    "type": "string"
                },
                "lastname": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "phonenum": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "2.0",
	Host:             "localhost:3000",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "MAANUSHI_EARTH_E-COMMERCE REST API",
	Description:      "MAANUSHI_EARTH_E-COMMERCE REST API built using Go, PSQL, REST API following Clean Architecture.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
